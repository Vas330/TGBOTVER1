# handlers_common.py - —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–µ–≥–æ Firebase
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from config import ADMIN_ID


async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start —Å –∑–∞—â–∏—Ç–æ–π –æ—Ç None Firebase"""
    firebase = context.bot_data.get('firebase')
    user_id = update.message.from_user.id
    
    print(f"DEBUG: /start –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    print(f"DEBUG: Firebase –¥–æ—Å—Ç—É–ø–µ–Ω: {firebase is not None}")

    # –ï—Å–ª–∏ Firebase –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    if not firebase:
        await show_main_menu(update)
        return

    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ Firebase —Ä–∞–±–æ—Ç–∞–µ—Ç
        client_login = firebase.get_client_by_chat_id(user_id)
        contractor_login = firebase.get_entrepreneur_by_chat_id(user_id)
        
        print(f"DEBUG: client_login={client_login}, contractor_login={contractor_login}")

        if client_login and contractor_login:
            # –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –æ–±–µ–∏—Ö —Ä–æ–ª—è—Ö
            await show_role_selection_menu(update, client_login, contractor_login)
            
        elif client_login:
            # –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∫–ª–∏–µ–Ω—Ç
            keyboard = [
                [InlineKeyboardButton("üìù –°–æ–∑–¥–∞—Ç—å –∑–∞–∫–∞–∑", callback_data='create_order')],
                [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data='my_client_orders')],
                [InlineKeyboardButton("üéØ –ù–∞—à–∏ —É—Å–ª—É–≥–∏", callback_data='our_services')],
                [InlineKeyboardButton("üé® –ù–∞—à–∏ —Ä–∞–±–æ—Ç—ã", callback_data='our_works')],
                [InlineKeyboardButton("üö™ –í—ã–π—Ç–∏", callback_data='client_logout')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(
                f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {client_login}!\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                reply_markup=reply_markup
            )
            
        elif contractor_login:
            # –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å
            balance = firebase.get_balance(contractor_login)
            keyboard = [
                [InlineKeyboardButton("üìã –ú–æ–∏ –∑–∞–∫–∞–∑—ã", callback_data='my_orders')],
                [InlineKeyboardButton("üë§ –õ–∏—á–Ω—ã–π –∫–∞–±–∏–Ω–µ—Ç", callback_data='personal_cabinet')],
                [InlineKeyboardButton("üö™ –í—ã–π—Ç–∏", callback_data='logout')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)
            await update.message.reply_text(
                f'–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –æ–±—Ä–∞—Ç–Ω–æ, {contractor_login}!\n–í–∞—à –±–∞–ª–∞–Ω—Å: {balance} —Ä—É–±.\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:',
                reply_markup=reply_markup
            )
            
        else:
            # –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
            await show_main_menu(update)
            
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –≤ /start: {e}")
        # –ü—Ä–∏ –ª—é–±–æ–π –æ—à–∏–±–∫–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
        await show_main_menu(update)


async def show_main_menu(update: Update) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏"""
    firebase = update.get_bot().bot_data.get('firebase') if hasattr(update, 'get_bot') else None
    
    if not firebase:
        welcome_text = """üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–ª—Ç—Ä–µ–∑–∞!

‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
–ü–æ–ª–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∞

–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç
‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å

–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å:"""
    else:
        welcome_text = """üéØ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –ê–ª—Ç—Ä–µ–∑–∞!

–ú—ã ‚Äî –∫–æ–º–∞–Ω–¥–∞ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–º–æ–∂–µ—Ç –≤–∞–º:
‚Ä¢ –°–æ–∑–¥–∞—Ç—å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–π —Å–∞–π—Ç
‚Ä¢ –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –≤–∏–¥–µ–æ-–∫–æ–Ω—Ç–µ–Ω—Ç
‚Ä¢ –ü–æ–≤—ã—Å–∏—Ç—å –ø—Ä–æ–¥–∞–∂–∏ –∏ —É–∑–Ω–∞–≤–∞–µ–º–æ—Å—Ç—å

–í—ã–±–µ—Ä–∏—Ç–µ —Å–≤–æ—é —Ä–æ–ª—å:"""

    keyboard = [
        [InlineKeyboardButton("üë§ –Ø –∑–∞–∫–∞–∑—á–∏–∫", callback_data='client')],
        [InlineKeyboardButton("üîß –Ø –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", callback_data='entrepreneur')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(welcome_text, reply_markup=reply_markup)


async def show_role_selection_menu(update: Update, client_login: str, contractor_login: str) -> None:
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ —Ä–æ–ª–∏ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å –¥–≤—É–º—è —Ä–æ–ª—è–º–∏"""
    text = f"""üë§ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!

–í—ã –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ —Å–∏—Å—Ç–µ–º–µ –≤ –¥–≤—É—Ö —Ä–æ–ª—è—Ö:
‚Ä¢ –ó–∞–∫–∞–∑—á–∏–∫: {client_login}
‚Ä¢ –ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å: {contractor_login}

–í –∫–∞–∫–æ–π —Ä–æ–ª–∏ —Ö–æ—Ç–∏—Ç–µ —Ä–∞–±–æ—Ç–∞—Ç—å?"""

    keyboard = [
        [InlineKeyboardButton("üë§ –í–æ–π—Ç–∏ –∫–∞–∫ –∑–∞–∫–∞–∑—á–∏–∫", callback_data='client')],
        [InlineKeyboardButton("üîß –í–æ–π—Ç–∏ –∫–∞–∫ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å", callback_data='entrepreneur')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(text, reply_markup=reply_markup)


async def handle_admin_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω"""
    user_id = update.message.from_user.id

    if user_id != ADMIN_ID:
        await update.message.reply_text("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.")
        return

    firebase = context.bot_data.get('firebase')
    
    if not firebase:
        admin_text = """üëë –ü–ê–ù–ï–õ–¨ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê

‚ö†Ô∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞
–§—É–Ω–∫—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω—ã

–î–ª—è –ø–æ–ª–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ Firebase."""
        
        await update.message.reply_text(admin_text)
        return

    admin_text = """üëë –ü–ê–ù–ï–õ–¨ –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–ê

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!
–î–æ—Å—Ç—É–ø–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:"""

    keyboard = [
        [InlineKeyboardButton("‚ûï –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è", callback_data='register_entrepreneur')],
        [InlineKeyboardButton("üë• –í—Å–µ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–∏", callback_data='all_entrepreneurs')],
        [InlineKeyboardButton("üìÇ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ", callback_data='portfolio_menu')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.message.reply_text(admin_text, reply_markup=reply_markup)


async def handle_unknown_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∫–æ–º–∞–Ω–¥"""
    firebase = context.bot_data.get('firebase')
    user_id = update.message.from_user.id
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –µ—Å–ª–∏ Firebase –¥–æ—Å—Ç—É–ø–µ–Ω
    if firebase:
        try:
            firebase.clear_user_state(user_id)
        except:
            pass
    
    await update.message.reply_text(
        "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ /start –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º."
    )
