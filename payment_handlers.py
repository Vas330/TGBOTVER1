# payment_handlers.py - –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import ContextTypes
from datetime import datetime

from yoomoney_manager import YooMoneyManager
from config import YOOMONEY_SHOP_ID, YOOMONEY_SECRET_KEY


async def send_payment_request(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –Ω–∞ –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞ —Å QR-–∫–æ–¥–æ–º"""
    firebase = context.bot_data['firebase']

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
    order = firebase.get_order_by_id(order_id)
    if not order:
        return

    # –ü–æ–ª—É—á–∞–µ–º chat_id –∫–ª–∏–µ–Ω—Ç–∞
    customer_username = order.get('customer', {}).get('username')
    if not customer_username:
        return

    customer_chat_id = firebase.get_user_chat_id_by_username(customer_username)
    if not customer_chat_id:
        print(f"–ù–µ –Ω–∞–π–¥–µ–Ω chat_id –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞ {customer_username}")
        return

    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä YooMoney
    yoomoney = YooMoneyManager(YOOMONEY_SHOP_ID, YOOMONEY_SECRET_KEY)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞
    payment_data = yoomoney.generate_payment_data(
        order_id=order_id,
        amount=order.get('amount', 0),
        description=f"–û–ø–ª–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}"
    )

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø–ª–∞—Ç–µ–∂ –≤ Firebase
    payment_data['user_id'] = customer_chat_id
    payment_data['order_id'] = order_id
    firebase.create_payment(payment_data)

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º QR-–∫–æ–¥
    qr_image = yoomoney.generate_qr_code(payment_data)

    # –°–æ–∑–¥–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    payment_message = yoomoney.create_payment_message(payment_data, order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))

    # –ö–Ω–æ–ø–∫–∏
    keyboard = [
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f'payment_confirm_{order_id}')],
        [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å —Å –æ–ø–ª–∞—Ç–æ–π", callback_data=f'payment_help_{order_id}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º QR-–∫–æ–¥ –∏ —Å–æ–æ–±—â–µ–Ω–∏–µ
        await context.bot.send_photo(
            chat_id=customer_chat_id,
            photo=qr_image,
            caption=payment_message,
            reply_markup=reply_markup
        )

        print(f"QR-–∫–æ–¥ –¥–ª—è –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–ª–∏–µ–Ω—Ç—É {customer_username}")

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞
        firebase.update_order(order_id, {
            'payment_required': True,
            'payment_sent_at': datetime.now(),
            'status': 'waiting_payment'
        })

    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ QR-–∫–æ–¥–∞: {e}")


async def handle_payment_confirmation(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞"""
    firebase = context.bot_data['firebase']
    query = update.callback_query
    user_id = query.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑
    order = firebase.get_order_by_id(order_id)
    if not order:
        await query.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∫–ª–∏–µ–Ω—Ç –∑–∞–∫–∞–∑–∞
    customer_username = order.get('customer', {}).get('username')
    client_login = firebase.get_client_by_chat_id(user_id)

    if customer_username != client_login:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∑–∞–∫–∞–∑—É")
        return

    # –ü–æ–ª—É—á–∞–µ–º –ø–ª–∞—Ç–µ–∂
    payment = firebase.get_payment_by_order(order_id)
    if not payment:
        await query.answer("–ü–ª–∞—Ç–µ–∂ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –∫–∞–∫ "–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω –∫–ª–∏–µ–Ω—Ç–æ–º"
    firebase.update_payment_status(payment['id'], 'client_confirmed', datetime.now())

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑
    firebase.update_order(order_id, {
        'status': 'payment_confirmed',
        'client_payment_confirmed_at': datetime.now()
    })

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    await query.edit_message_caption(
        caption="‚úÖ –û–ü–õ–ê–¢–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê\n\n"
                "–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã.\n"
                "–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∏ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º.\n\n"
                "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ø—Ä–∏—Å—Ç—É–ø–∏—Ç –∫ —Ä–∞–±–æ—Ç–µ."
    )

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    executor_username = order.get('executor', {}).get('username')
    if executor_username:
        executor_chat_id = firebase.get_user_chat_id_by_username(executor_username)
        if executor_chat_id:
            keyboard = [
                [InlineKeyboardButton("üöÄ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f'start_work_{order_id}')],
                [InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=f'decline_paid_order_{order_id}')]
            ]
            reply_markup = InlineKeyboardMarkup(keyboard)

            try:
                await context.bot.send_message(
                    chat_id=executor_chat_id,
                    text=f"üí∞ –ó–ê–ö–ê–ó –û–ü–õ–ê–ß–ï–ù –ö–õ–ò–ï–ù–¢–û–ú!\n\n"
                         f"üìã –ó–∞–∫–∞–∑: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                         f"üí∞ –°—É–º–º–∞: {order.get('amount', 0)} —Ä—É–±.\n"
                         f"üë§ –ö–ª–∏–µ–Ω—Ç: {customer_username}\n\n"
                         f"–ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞.\n"
                         f"–ì–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ?",
                    reply_markup=reply_markup
                )
                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é {executor_username}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: {e}")


async def handle_start_work(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –Ω–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ –æ–±–µ–∏–º —Å—Ç–æ—Ä–æ–Ω–∞–º"""
    firebase = context.bot_data['firebase']
    query = update.callback_query
    user_id = query.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∑–∞–∫–∞–∑
    order = firebase.get_order_by_id(order_id)
    if not order:
        await query.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞–∫–∞–∑–∞
    executor_username = order.get('executor', {}).get('username')
    contractor_login = firebase.get_entrepreneur_by_chat_id(user_id)

    if executor_username != contractor_login:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∑–∞–∫–∞–∑—É")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑ - –Ω–∞—á–∏–Ω–∞–µ–º —Ä–∞–±–æ—Ç—É
    firebase.update_order(order_id, {
        'status': 'in_work',
        'work_started_at': datetime.now(),
        'accepted': True
    })

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞ –¥–ª—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    executor_keyboard = [
        [InlineKeyboardButton("üí¨ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç —Å –∫–ª–∏–µ–Ω—Ç–æ–º", callback_data=f'open_contractor_chat_{order_id}')],
        [InlineKeyboardButton("üéØ –°–¥–∞—Ç—å –∑–∞–∫–∞–∑ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É", callback_data=f'submit_work_{order_id}')]
    ]
    executor_reply_markup = InlineKeyboardMarkup(executor_keyboard)

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    await query.edit_message_text(
        "üöÄ –†–ê–ë–û–¢–ê –ù–ê–î –ü–†–û–ï–ö–¢–û–ú –ù–ê–ß–ê–õ–ê–°–¨!\n\n"
        f"–ó–∞–∫–∞–∑: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
        f"–°—Ç–∞—Ç—É—Å: –í —Ä–∞–±–æ—Ç–µ\n\n"
        "–í—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —Å –∫–ª–∏–µ–Ω—Ç–æ–º —á–µ—Ä–µ–∑ —á–∞—Ç –∑–∞–∫–∞–∑–∞.\n"
        "–£–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ!",
        reply_markup=executor_reply_markup
    )

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    customer_username = order.get('customer', {}).get('username')
    if customer_username:
        customer_chat_id = firebase.get_user_chat_id_by_username(customer_username)
        if customer_chat_id:
            # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —á–∞—Ç–∞ –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞
            client_keyboard = [
                [InlineKeyboardButton("üí¨ –û—Ç–∫—Ä—ã—Ç—å —á–∞—Ç —Å –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º", callback_data=f'open_client_chat_{order_id}')]
            ]
            client_reply_markup = InlineKeyboardMarkup(client_keyboard)

            try:
                await context.bot.send_message(
                    chat_id=customer_chat_id,
                    text=f"üöÄ –†–ê–ë–û–¢–ê –ù–ê–î –ü–†–û–ï–ö–¢–û–ú –ù–ê–ß–ê–õ–ê–°–¨!\n\n"
                         f"–ó–∞–∫–∞–∑: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                         f"–°—Ç–∞—Ç—É—Å: –í —Ä–∞–±–æ—Ç–µ\n\n"
                         f"–ò—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å {executor_username} –ø—Ä–∏—Å—Ç—É–ø–∏–ª –∫ —Ä–∞–±–æ—Ç–µ!\n\n"
                         f"–í—ã –º–æ–∂–µ—Ç–µ –æ–±—â–∞—Ç—å—Å—è —á–µ—Ä–µ–∑ —á–∞—Ç –∑–∞–∫–∞–∑–∞.\n"
                         f"–£–¥–∞—á–∏ –≤ —Ä–∞–±–æ—Ç–µ!",
                    reply_markup=client_reply_markup
                )
                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ —Ä–∞–±–æ—Ç—ã –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É {customer_username}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")


async def handle_payment_help(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–ü–æ–º–æ—â—å —Å –æ–ø–ª–∞—Ç–æ–π"""
    query = update.callback_query

    help_text = """‚ùì –ü–û–ú–û–©–¨ –° –û–ü–õ–ê–¢–û–ô

üì± –ö–∞–∫ –æ–ø–ª–∞—Ç–∏—Ç—å —á–µ—Ä–µ–∑ QR-–∫–æ–¥:
1. –û—Ç–∫—Ä–æ–π—Ç–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ YooMoney –Ω–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–µ
2. –ù–∞–∂–º–∏—Ç–µ "–°–∫–∞–Ω–∏—Ä–æ–≤–∞—Ç—å QR" 
3. –ù–∞–≤–µ–¥–∏—Ç–µ –∫–∞–º–µ—Ä—É –Ω–∞ QR-–∫–æ–¥
4. –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø–ª–∞—Ç–µ–∂

üí≥ –î—Ä—É–≥–∏–µ —Å–ø–æ—Å–æ–±—ã –æ–ø–ª–∞—Ç—ã:
‚Ä¢ –ë–∞–Ω–∫–æ–≤—Å–∫–æ–π –∫–∞—Ä—Ç–æ–π —á–µ—Ä–µ–∑ YooMoney
‚Ä¢ –ß–µ—Ä–µ–∑ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç-–±–∞–Ω–∫
‚Ä¢ –í –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –±–∞–Ω–∫–∞ –ø–æ QR-–∫–æ–¥—É

‚ùó –í–∞–∂–Ω–æ:
–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –Ω–∞–∂–º–∏—Ç–µ "–Ø –æ–ø–ª–∞—Ç–∏–ª" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å QR-–∫–æ–¥–æ–º.

üìû –ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å?
–û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ –Ω–∞—à–µ–º—É –º–µ–Ω–µ–¥–∂–µ—Ä—É: @YourManagerUsername"""

    keyboard = [
        [InlineKeyboardButton("‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –æ–ø–ª–∞—Ç–µ", callback_data=f'back_to_payment_{order_id}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await query.edit_message_caption(
        caption=help_text,
        reply_markup=reply_markup
    )


async def handle_back_to_payment(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫ —Å–æ–æ–±—â–µ–Ω–∏—é —Å –æ–ø–ª–∞—Ç–æ–π"""
    firebase = context.bot_data['firebase']

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑ –∏ –ø–ª–∞—Ç–µ–∂
    order = firebase.get_order_by_id(order_id)
    payment = firebase.get_payment_by_order(order_id)

    if not order or not payment:
        await update.callback_query.answer("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö")
        return

    # –°–æ–∑–¥–∞–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä YooMoney
    yoomoney = YooMoneyManager(YOOMONEY_SHOP_ID, YOOMONEY_SECRET_KEY)

    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ–ø–ª–∞—Ç–µ
    payment_message = yoomoney.create_payment_message(payment, order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è'))

    keyboard = [
        [InlineKeyboardButton("‚úÖ –Ø –æ–ø–ª–∞—Ç–∏–ª", callback_data=f'payment_confirm_{order_id}')],
        [InlineKeyboardButton("‚ùì –ü–æ–º–æ—â—å —Å –æ–ø–ª–∞—Ç–æ–π", callback_data=f'payment_help_{order_id}')]
    ]
    reply_markup = InlineKeyboardMarkup(keyboard)

    await update.callback_query.edit_message_caption(
        caption=payment_message,
        reply_markup=reply_markup
    )


async def handle_decline_paid_order(update: Update, context: ContextTypes.DEFAULT_TYPE, order_id: str) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ—Ç–∫–∞–∑ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –æ—Ç –æ–ø–ª–∞—á–µ–Ω–Ω–æ–≥–æ –∑–∞–∫–∞–∑–∞"""
    firebase = context.bot_data['firebase']
    query = update.callback_query
    user_id = query.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –∑–∞–∫–∞–∑
    order = firebase.get_order_by_id(order_id)
    if not order:
        await query.answer("–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ —ç—Ç–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –∑–∞–∫–∞–∑–∞
    executor_username = order.get('executor', {}).get('username')
    contractor_login = firebase.get_entrepreneur_by_chat_id(user_id)

    if executor_username != contractor_login:
        await query.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–º—É –∑–∞–∫–∞–∑—É")
        return

    # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑
    firebase.update_order(order_id, {
        'status': 'executor_declined_paid',
        'executor_declined_at': datetime.now()
    })

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    await query.edit_message_text(
        "‚ùå –í–´ –û–¢–ö–ê–ó–ê–õ–ò–°–¨ –û–¢ –ó–ê–ö–ê–ó–ê\n\n"
        "–ó–∞–∫–∞–∑ –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω.\n"
        "–ú—ã –Ω–∞–π–¥–µ–º –¥—Ä—É–≥–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è –¥–ª—è –∫–ª–∏–µ–Ω—Ç–∞.\n"
        "–°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –∫–ª–∏–µ–Ω—Ç—É."
    )

    # –£–≤–µ–¥–æ–º–ª—è–µ–º –∫–ª–∏–µ–Ω—Ç–∞
    customer_username = order.get('customer', {}).get('username')
    if customer_username:
        customer_chat_id = firebase.get_user_chat_id_by_username(customer_username)
        if customer_chat_id:
            try:
                await context.bot.send_message(
                    chat_id=customer_chat_id,
                    text=f"üòî –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å {executor_username} –Ω–µ –º–æ–∂–µ—Ç –≤–∑—è—Ç—å –≤–∞—à –∑–∞–∫–∞–∑ –≤ —Ä–∞–±–æ—Ç—É.\n\n"
                         f"üìã –ó–∞–∫–∞–∑: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                         f"üí∞ –°—É–º–º–∞: {order.get('amount', 0)} —Ä—É–±.\n\n"
                         f"–ú—ã –Ω–∞–π–¥–µ–º –≤–∞–º –¥—Ä—É–≥–æ–≥–æ –∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è.\n"
                         f"–°—Ä–µ–¥—Å—Ç–≤–∞ –±—É–¥—É—Ç –≤–æ–∑–≤—Ä–∞—â–µ–Ω—ã –Ω–∞ –≤–∞—à—É –∫–∞—Ä—Ç—É –≤ —Ç–µ—á–µ–Ω–∏–µ 3-5 —Ä–∞–±–æ—á–∏—Ö –¥–Ω–µ–π.\n\n"
                         f"–ò–∑–≤–∏–Ω–∏—Ç–µ –∑–∞ –Ω–µ—É–¥–æ–±—Å—Ç–≤–∞!"
                )
                print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–∞–∑–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∫–ª–∏–µ–Ω—Ç—É {customer_username}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞: {e}")


async def handle_paid_text_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ '–æ–ø–ª–∞—Ç–∏–ª' –æ—Ç –∫–ª–∏–µ–Ω—Ç–∞"""
    firebase = context.bot_data['firebase']
    user_id = update.message.from_user.id

    # –ü–æ–ª—É—á–∞–µ–º –æ–∂–∏–¥–∞—é—â–∏–µ –ø–ª–∞—Ç–µ–∂–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    pending_payments = firebase.get_pending_payments_by_user(user_id)

    if not pending_payments:
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Ç –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π.\n"
            "–ï—Å–ª–∏ –≤—ã –æ–ø–ª–∞—Ç–∏–ª–∏ –∑–∞–∫–∞–∑, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫—É '–Ø –æ–ø–ª–∞—Ç–∏–ª' –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ —Å QR-–∫–æ–¥–æ–º."
        )
        return

    # –ï—Å–ª–∏ –µ—Å—Ç—å —Ç–æ–ª—å–∫–æ –æ–¥–∏–Ω –æ–∂–∏–¥–∞—é—â–∏–π –ø–ª–∞—Ç–µ–∂
    if len(pending_payments) == 1:
        payment = pending_payments[0]
        order_id = payment['order_id']

        # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞
        firebase.update_payment_status(payment['id'], 'client_confirmed', datetime.now())

        # –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–∫–∞–∑
        firebase.update_order(order_id, {
            'status': 'payment_confirmed',
            'client_payment_confirmed_at': datetime.now()
        })

        order = firebase.get_order_by_id(order_id)

        await update.message.reply_text(
            "‚úÖ –û–ü–õ–ê–¢–ê –ü–û–î–¢–í–ï–†–ñ–î–ï–ù–ê\n\n"
            "–°–ø–∞—Å–∏–±–æ! –ú—ã –ø–æ–ª—É—á–∏–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ–ø–ª–∞—Ç—ã.\n"
            "–û–∂–∏–¥–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–º –∏ –Ω–∞—á–∞–ª–∞ —Ä–∞–±–æ—Ç—ã –Ω–∞–¥ –ø—Ä–æ–µ–∫—Ç–æ–º.\n\n"
            "–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –∫–æ–≥–¥–∞ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å –ø—Ä–∏—Å—Ç—É–ø–∏—Ç –∫ —Ä–∞–±–æ—Ç–µ."
        )

        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
        executor_username = order.get('executor', {}).get('username')
        if executor_username:
            executor_chat_id = firebase.get_user_chat_id_by_username(executor_username)
            if executor_chat_id:
                keyboard = [
                    [InlineKeyboardButton("üöÄ –í–∑—è—Ç—å –≤ —Ä–∞–±–æ—Ç—É", callback_data=f'start_work_{order_id}')],
                    [InlineKeyboardButton("‚ùå –û—Ç–∫–∞–∑–∞—Ç—å—Å—è", callback_data=f'decline_paid_order_{order_id}')]
                ]
                reply_markup = InlineKeyboardMarkup(keyboard)

                try:
                    await context.bot.send_message(
                        chat_id=executor_chat_id,
                        text=f"üí∞ –ó–ê–ö–ê–ó –û–ü–õ–ê–ß–ï–ù –ö–õ–ò–ï–ù–¢–û–ú!\n\n"
                             f"üìã –ó–∞–∫–∞–∑: {order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')}\n"
                             f"üí∞ –°—É–º–º–∞: {order.get('amount', 0)} —Ä—É–±.\n"
                             f"üë§ –ö–ª–∏–µ–Ω—Ç: {order.get('customer', {}).get('username')}\n\n"
                             f"–ö–ª–∏–µ–Ω—Ç –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞.\n"
                             f"–ì–æ—Ç–æ–≤—ã –ø—Ä–∏—Å—Ç—É–ø–∏—Ç—å –∫ —Ä–∞–±–æ—Ç–µ?",
                        reply_markup=reply_markup
                    )
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è: {e}")

    else:
        # –ï—Å–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏—Å–æ–∫
        keyboard = []
        for payment in pending_payments:
            order = firebase.get_order_by_id(payment['order_id'])
            order_title = order.get('title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è') if order else '–ó–∞–∫–∞–∑ –Ω–µ –Ω–∞–π–¥–µ–Ω'
            keyboard.append([
                InlineKeyboardButton(
                    f"{order_title} - {payment['amount']:.0f} —Ä—É–±.",
                    callback_data=f"payment_confirm_{payment['order_id']}"
                )
            ])

        reply_markup = InlineKeyboardMarkup(keyboard)
        await update.message.reply_text(
            "–£ –≤–∞—Å –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–∂–∏–¥–∞—é—â–∏—Ö –ø–ª–∞—Ç–µ–∂–µ–π.\n"
            "–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–∫–∞–∑, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –æ–ø–ª–∞—Ç–∏–ª–∏:",
            reply_markup=reply_markup
        )