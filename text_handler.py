# text_handler.py
from telegram import Update
from telegram.ext import ContextTypes

from state_manager import user_state
from handlers_common import handle_admin_command
from handlers_client import handle_order_creation, handle_client_auth, handle_chat_messages
from handlers_contractor import handle_login_process
from handlers_admin import handle_registration_process, handle_admin_updates, handle_portfolio_addition


async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ü—Ä–æ—Å—Ç–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π"""
    user_id = update.message.from_user.id
    text = update.message.text.strip() if update.message.text else ""
    state = user_state.get_state(user_id)

    print(f"üî• –û–¢–õ–ê–î–ö–ê: User={user_id}, Text='{text}', State='{state}'")

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–æ–º–∞–Ω–¥—ã –∞–¥–º–∏–Ω
    if text.lower() == "–∞–¥–º–∏–Ω":
        await handle_admin_command(update, context)
        return

    # –¢–ï–°–¢–û–í–ê–Ø –ö–û–ú–ê–ù–î–ê
    if text.lower() == "—Ç–µ—Å—Ç":
        try:
            user_state.add_portfolio_item('sites', '–¢–µ—Å—Ç —Å–∞–π—Ç', '–¢–µ—Å—Ç –æ–ø–∏—Å–∞–Ω–∏–µ', ['https://test.jpg'],
                                          ['https://test.com'])
            sites = user_state.get_portfolio_items('sites')
            await update.message.reply_text(f"‚úÖ –¢–µ—Å—Ç: –≤ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ {len(sites)} —Å–∞–π—Ç–æ–≤")
            return
        except Exception as e:
            await update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∞: {e}")
            return

    # –û–ë–†–ê–ë–û–¢–ö–ê –°–û–°–¢–û–Ø–ù–ò–ô
    if state:
        print(f"üî• –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")

        try:
            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —á–∞—Ç–æ–≤
            if await handle_chat_messages(update, context, state):
                return

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ –∫–ª–∏–µ–Ω—Ç–∞–º–∏
            if await handle_order_creation(update, context, state):
                return

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∫–ª–∏–µ–Ω—Ç–æ–≤
            if await handle_client_auth(update, context, state):
                return

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π
            if await handle_login_process(update, context, state):
                return

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª–µ–π (–∞–¥–º–∏–Ω)
            if await handle_registration_process(update, context, state):
                return

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω—ã—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (–≤–∫–ª—é—á–∞—è —É–¥–∞–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ)
            if await handle_admin_updates(update, context, state):
                return

            # –û–ë–†–ê–ë–û–¢–ö–ê –°–¢–ê–†–û–ì–û –§–û–†–ú–ê–¢–ê –ü–û–†–¢–§–û–õ–ò–û (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∏ —Ä–∞–±–æ—á–∞—è –≤–µ—Ä—Å–∏—è)
            if state.startswith('add_'):
                await handle_old_portfolio_format(update, context, state, text)
                return

            # –ï—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ –ø–æ–¥–æ—à–ª–æ
            print(f"üî• –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
            await update.message.reply_text(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {state}")
            user_state.set_state(user_id, None)

        except Exception as e:
            print(f"üí• –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
            import traceback
            traceback.print_exc()
            await update.message.reply_text(f"üí• –û—à–∏–±–∫–∞: {str(e)}")
            user_state.set_state(user_id, None)


async def handle_old_portfolio_format(update: Update, context: ContextTypes.DEFAULT_TYPE, state: str,
                                      text: str) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–π —Ñ–æ—Ä–º–∞—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ—Ä—Ç—Ñ–æ–ª–∏–æ"""
    user_id = update.message.from_user.id

    print(f"üî• –°–¢–ê–†–´–ô –§–û–†–ú–ê–¢: —Å–æ—Å—Ç–æ—è–Ω–∏–µ {state}")

    if state == 'add_sites_title':
        print(f"üî• –®–∞–≥ 1: –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ '{text}'")
        context.user_data['site_title'] = text
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ (–∫–∞—Ä—Ç–∏–Ω–∫–æ–π) –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ:")
        user_state.set_state(user_id, 'add_sites_photo')

    elif state == 'add_sites_photo':
        if text:  # –ï—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—Å—Ç (—Å—Å—ã–ª–∫–∞)
            print(f"üî• –®–∞–≥ 2: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ '{text}'")
            context.user_data['site_photo'] = text
            context.user_data['site_photo_type'] = 'url'
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
            user_state.set_state(user_id, 'add_sites_description')
        else:
            await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –∏–ª–∏ —Å—Å—ã–ª–∫—É –Ω–∞ —Ñ–æ—Ç–æ")

    elif state == 'add_sites_description':
        print(f"üî• –®–∞–≥ 3: –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ '{text}'")
        context.user_data['site_description'] = text
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ —Å–∞–π—Ç:")
        user_state.set_state(user_id, 'add_sites_link')

    elif state == 'add_sites_link':
        print(f"üî• –®–∞–≥ 4: –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É '{text}'")

        title = context.user_data.get('site_title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        photo = context.user_data.get('site_photo', '')
        description = context.user_data.get('site_description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º
        user_state.add_portfolio_item('sites', title, description, [photo], [text])
        await update.message.reply_text(f"‚úÖ –°–∞–π—Ç '{title}' –¥–æ–±–∞–≤–ª–µ–Ω!")

        # –û—á–∏—Å—Ç–∫–∞
        for key in ['site_title', 'site_photo', 'site_photo_type', 'site_description']:
            context.user_data.pop(key, None)

        user_state.set_state(user_id, None)

    # –í–ò–î–ï–û –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ
    elif state == 'add_video_title':
        context.user_data['video_title'] = text
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–≤—å—é (–∫–∞—Ä—Ç–∏–Ω–∫–æ–π) –∏–ª–∏ —Å—Å—ã–ª–∫—É:")
        user_state.set_state(user_id, 'add_video_photo')

    elif state == 'add_video_photo':
        if text:
            context.user_data['video_photo'] = text
            context.user_data['video_photo_type'] = 'url'
            await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
            user_state.set_state(user_id, 'add_video_description')
        else:
            await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ –ø—Ä–µ–≤—å—é –∏–ª–∏ —Å—Å—ã–ª–∫—É")

    elif state == 'add_video_description':
        context.user_data['video_description'] = text
        await update.message.reply_text("–í–≤–µ–¥–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ:")
        user_state.set_state(user_id, 'add_video_link')

    elif state == 'add_video_link':
        title = context.user_data.get('video_title', '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è')
        photo = context.user_data.get('video_photo', '')
        description = context.user_data.get('video_description', '–ë–µ–∑ –æ–ø–∏—Å–∞–Ω–∏—è')

        user_state.add_portfolio_item('video', title, description, [photo], [text])
        await update.message.reply_text(f"‚úÖ –í–∏–¥–µ–æ '{title}' –¥–æ–±–∞–≤–ª–µ–Ω–æ!")

        for key in ['video_title', 'video_photo', 'video_photo_type', 'video_description']:
            context.user_data.pop(key, None)

        user_state.set_state(user_id, None)


async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π"""
    user_id = update.message.from_user.id
    state = user_state.get_state(user_id)

    print(f"üì∏ –§–û–¢–û: User={user_id}, State='{state}'")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è —Ñ–æ—Ç–æ
    if state in ['add_sites_photo', 'add_video_photo', 'portfolio_add_sites_images', 'portfolio_add_video_images']:
        try:
            # –ü–æ–ª—É—á–∞–µ–º file_id —Å–∞–º–æ–≥–æ –±–æ–ª—å—à–æ–≥–æ —Ä–∞–∑–º–µ—Ä–∞ —Ñ–æ—Ç–æ
            photo_file_id = update.message.photo[-1].file_id
            print(f"üì∏ –°–æ—Ö—Ä–∞–Ω—è–µ–º file_id: {photo_file_id}")

            # –°–¢–ê–†–´–ô –§–û–†–ú–ê–¢
            if state == 'add_sites_photo':
                context.user_data['site_photo'] = photo_file_id
                context.user_data['site_photo_type'] = 'file_id'
                await update.message.reply_text("‚úÖ –§–æ—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
                user_state.set_state(user_id, 'add_sites_description')

            elif state == 'add_video_photo':
                context.user_data['video_photo'] = photo_file_id
                context.user_data['video_photo_type'] = 'file_id'
                await update.message.reply_text("‚úÖ –ü—Ä–µ–≤—å—é —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ! –í–≤–µ–¥–∏—Ç–µ –æ–ø–∏—Å–∞–Ω–∏–µ:")
                user_state.set_state(user_id, 'add_video_description')

            # –ù–û–í–´–ô –§–û–†–ú–ê–¢
            elif state == 'portfolio_add_sites_images':
                images = context.user_data.get('portfolio_sites_images', [])
                images.append(photo_file_id)
                context.user_data['portfolio_sites_images'] = images
                await update.message.reply_text("‚úÖ –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–≥–æ—Ç–æ–≤–æ':")

            elif state == 'portfolio_add_video_images':
                images = context.user_data.get('portfolio_video_images', [])
                images.append(photo_file_id)
                context.user_data['portfolio_video_images'] = images
                await update.message.reply_text("‚úÖ –§–æ—Ç–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ! –û—Ç–ø—Ä–∞–≤—å—Ç–µ –µ—â–µ —Ñ–æ—Ç–æ –∏–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ '–≥–æ—Ç–æ–≤–æ':")

        except Exception as e:
            print(f"üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–æ—Ç–æ: {e}")
            await update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ñ–æ—Ç–æ: {e}")
    else:
        print(f"üì∏ –ù–µ–ø–æ–¥—Ö–æ–¥—è—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ñ–æ—Ç–æ: {state}")
        await update.message.reply_text("–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ –≤ –Ω—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç –ø—Ä–æ—Ü–µ—Å—Å–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è.")